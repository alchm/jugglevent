////////////
// User API
////////////

// Uses User Mongoose model
var mongoose;
var Association;
var User;
var ObjectId;
var ObjectIdType;
exports.init = function(dataProvider) {
    mongoose = dataProvider;
    Association = mongoose.model('Association');
    User = mongoose.model('User');
    ObjectId = mongoose.Schema.ObjectId;
    ObjectIdType = mongoose.Types.ObjectId;
    return exports;
}
var sha512 = require('sha512-min.js');


/*
 Creates a new user in database if it doesn't already exists
 It first look up for existing user by email comparison
 */
exports.new = function(req, done){
    Association.findOne({ name: req.body.name }, function (err, a){
        /*
         If no association found,
         it creates new association based on Mongoose User model,
         then sets values from request to the new association
         */
        if (a == null) {

            // Creating new association model
            a = new Association();
            a.city = req.body.city;
            a.school = req.body.school;
            a.name = req.body.name;
            a.contact = req.body.contact.toLowerCase();
            User.findOne({ email: req.body.email }, '_id associations password', function(err, user){
                if (!err) {
                    if (user && user.password == sha512.compute(req.body.password)) {
                        a.admins.push( user );
                        a.save(function (err) {
                            if (!err) {
                                console.log('New registered association : ' + req.body.name + ' -> ' + req.body.contact);
                                user.associations.push( a );
                                user.save(function(err) {
                                    if (!err) done(null, a);
                                    else done(err, null);
                                });
                            }
                            else done(err, null);
                        });
                    } else done(err, null);
                } else done(err, null);

            });
        } else done(new Error("Duplicate association"), null);
    });
}

exports.populate = function(id) {
    Association.findOne({ _id: id })
        .populate('admins')
        .exec(function(err, asso){
            if (!err) { console.log('found : '); console.log(asso); }
            else console.log(err);
        });
    /*Association.findOne({_id : id}, function(err, asso){
       if (!err) {
           if (asso) User.findOne({_id: "51e47c1857e4016f0b000001"}, function(err, user){
               if (!err){
                   if (user) {
                       asso.admins.push( user );
                       console.log('user pushed');
                       asso.save(function(err){
                           if (!err) console.log('asso saved');
                           else console.log("asso unsaved");
                       });
                   }
               } else console.log('find one user error');
           });
       } else console.log('find on asso error');
    });*/
}
/*exports.update = function(req) {
    User.findOne({ '_id': req.user._id }, function(err, user){
        user.firstname = req.body.firstname;
        user.lastname = req.body.lastname;
        user.email = req.body.email;
        user.city = req.body.city;
        user.save(function (err) {
            if (!err) {
                console.log('User successfully updated : ' + req.body.email);
            }
            else {
                console.log('Error on user update :' + err);
            }
        });
    });
}*/